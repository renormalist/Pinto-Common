# ABSTRACT: A condensed summary of Pinto

package Pinto::Manual::QuickStart;

#------------------------------------------------------------------------------

# VERSION

#------------------------------------------------------------------------------
1;

__END__

=pod

=head1 CREATING THE REPOSITORY

  # A new repository with default stack named "dev"
  pinto -r /repo/dir dev

  # A new repository without any stacks
  pinto -r /repo/dir init

=head1 BROWSING THE REPOSITORY

  # See all packages in the default stack
  pinto -r /repo/dir list

  # See all packages in the default stack matching "Foo"
  pinto -r /repo/dir list -P Foo

  # See all packages in the default stack by author "JOE"
  pinto -r /repo/dir list -A JOE

  # See all packages in the stack called "dev"
  pinto -r /repo/dir list --stack dev
  pinto -r /repo/dir list dev

  # See all packages across all stacks
  pinto -r /repo/dir list --stack @
  pinto -r /repo/dir list @

=head1 PULLING UPSTREAM DISTRIBUTIONS

  # Pull latest version of Foo
  pinto -r /repo/dir pull Foo

  # Pull version 2.4 or newer of Foo
  pinto -r /repo/dir pull Foo~2.4

  # Pull a precise distribution
  pinto -r /repo/dir pull AUTHOR/Foo-1.9.tar.gz

  # Pull and pin at the same time
  pinto -r /repo/dir pull --pin Foo~2.4

  # Pull many packages or distributions
  pinto -r /repo/dir pull Foo Bar Baz Nuts ...
  pinto -r /repo/dir pull < LIST_OF_PACKAGES

  # Pull everything for a Dist::Zilla project
  dzil listdeps | pinto -r /repo/dir pull

  # Pull onto a stack called "dev"
  pinto -r /repo/dir pull --stack dev Foo

=head1 ADDING LOCAL DISTRIBUTIONS

  # Add local dist
  pinto -r /repo/dir add My-Dist-1.0.tar.gz

  # Assign to a different author
  pinto -r /repo/dir add --author SHAKESPEARE My-Dist-1.0.tar.gz

  # Add and pin at the same time
  pinto -r /repo/dir add --pin My-Dist-1.0.tar.gz

  # Add to a stack called "dev"
  pinto -r /repo/dir add --stack dev My-Dist-1.0.tar.gz

=head1 INSTALLING THINGS

  # Install from the default stack
  pinto -r /repo/dir install My::App

  # Install into a local::lib directory
  pinto -r /repo/dir install -l sandbox My::App

  # Install from a stack called "dev"
  pinto -r /repo/dir install --stack dev My::App

  # Install and populate the repository with missing prereqs
  pinto -r /repo/dir install --pull My::App

=head1 MANAGING STACKS

  # Create an empty stack called "qa"
  pinto -r /repo/dir new qa

  # Create a stack by copying qa -> dev
  pinto -r /repo/dir copy qa dev

  # Merge the dev stack into qa
  pinto -r /repo/dir merge dev qa

  # Delete the dev stack
  pinto -r /repo/dir kill dev

  # Show the names of existing stacks
  pinto -r /repo/dir stacks

  # Mark the "qa" stack as the default
  pinto -r /repo/dir default qa

  # Show config properties of the "qa" stack
  pinto -r /repo/dir config qa

  # Set config properties of the "qa" stack
  pinto -r /repo/dir --prop NAME=VALUE

=head1 USING PINS

  # Pin a package on the default stack
  pinto -r /repo/dir pin Some::Package

  # Pin a package on a stack called "dev"
  pinto -r /repo/dir pin --stack dev Some::Package

  # Pin a distribution
  pinto -r /repo/dir pin AUTHOR/Some-Dist-1.0.tar.gz

  # Unpin a package from the default stack
  pinto -r /repo/dir unpin Some::Package

  # Unpin a package from stack called "dev"
  pinto -r /repo/dir unpin --stack dev Some::Package

  # Unpin a distribution
  pinto -r /repo/dir unpin AUTHOR/Some-Dist-1.0.tar.gz

=head1 VERSION CONTROL

  # View commit messages for the default stack
  pinto -r /repo/dir log

  # View commit message from revision 12 of a stack called "dev"
  pinto -r /repo/dir log dev@12

  # Rollback the default stack to the previous revision
  pinto -r /repo/dir revert

  # Rollback the "qa" stack to revision 29
  pinto -r /repo/dir revert qa@29

  # See who/when each package was put in the default stack
  pinto -r /repo/dir blame

=head1 MISCELLANY

  # Report missing distribution archives
  pinto -r /repo/dir verify

  # Report repo statistics
  pinto -r /repo/dir stats

=head1 GETTING MORE HELP

  # Show a list of pinto commands
  pinto commands

  # Show a brief summary of a COMMAND
  pinto help COMMAND

  # Show the manual for a COMMAND
  pinto manual COMMAND

=head1 SEE ALSO

L<Pinto::Manual::Tutorial>

L<Pinto>

L<pinto>

=cut
